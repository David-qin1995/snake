{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, normalizeStyle as _normalizeStyle, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"app\"\n};\nvar _hoisted_2 = {\n  \"class\": \"game-container\"\n};\nvar _hoisted_3 = {\n  \"class\": \"game-info\"\n};\nvar _hoisted_4 = {\n  \"class\": \"score\"\n};\nvar _hoisted_5 = {\n  key: 0,\n  \"class\": \"game-over\"\n};\nvar _hoisted_6 = {\n  \"class\": \"controls\"\n};\nvar _hoisted_7 = {\n  \"class\": \"horizontal-controls\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[6] || (_cache[6] = _createElementVNode(\"h1\", null, \"Snake Game\", -1)), _createElementVNode(\"div\", {\n    \"class\": \"game-board\",\n    style: _normalizeStyle({\n      gridTemplateColumns: \"repeat(\".concat($data.width, \", 1fr)\")\n    })\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.board, function (cell, index) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      \"class\": _normalizeClass(['cell', cell.type])\n    }, null, 2);\n  }), 128))], 4), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, \"Score: \" + _toDisplayString($data.score), 1), $data.gameOver ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_cache[5] || (_cache[5] = _createTextVNode(\" Game Over! \")), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = function () {\n      return $options.restartGame && $options.restartGame.apply($options, arguments);\n    })\n  }, \"Play Again\")])) : _createCommentVNode(\"\", true)]), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = function ($event) {\n      return $options.move('up');\n    })\n  }, \"↑\"), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = function ($event) {\n      return $options.move('left');\n    })\n  }, \"←\"), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = function ($event) {\n      return $options.move('right');\n    })\n  }, \"→\")]), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = function ($event) {\n      return $options.move('down');\n    })\n  }, \"↓\")])])]);\n}","map":{"version":3,"names":["key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","style","_normalizeStyle","gridTemplateColumns","concat","$data","width","_Fragment","_renderList","board","cell","index","_normalizeClass","type","_hoisted_3","_hoisted_4","_toDisplayString","score","gameOver","_hoisted_5","_createTextVNode","onClick","_cache","$options","restartGame","apply","arguments","_createCommentVNode","_hoisted_6","$event","move","_hoisted_7"],"sources":["/Users/jason/devTools/code/snake_game/snake-game-frontend/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"app\">\n    <div class=\"game-container\">\n      <h1>Snake Game</h1>\n      <div class=\"game-board\" :style=\"{ gridTemplateColumns: `repeat(${width}, 1fr)` }\">\n        <div\n          v-for=\"(cell, index) in board\"\n          :key=\"index\"\n          :class=\"['cell', cell.type]\"\n        ></div>\n      </div>\n      <div class=\"game-info\">\n        <div class=\"score\">Score: {{ score }}</div>\n        <div v-if=\"gameOver\" class=\"game-over\">\n          Game Over!\n          <button @click=\"restartGame\">Play Again</button>\n        </div>\n      </div>\n      <div class=\"controls\">\n        <button @click=\"move('up')\">↑</button>\n        <div class=\"horizontal-controls\">\n          <button @click=\"move('left')\">←</button>\n          <button @click=\"move('right')\">→</button>\n        </div>\n        <button @click=\"move('down')\">↓</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nconst API_BASE_URL = 'http://localhost:8080/api';\n\nexport default {\n  name: 'App',\n  data() {\n    return {\n      width: 20,\n      height: 10,\n      board: [],\n      score: 0,\n      gameOver: false,\n      gameInterval: null\n    };\n  },\n  created() {\n    this.initializeBoard();\n    this.startGame();\n  },\n  beforeUnmount() {\n    this.stopGame();\n  },\n  methods: {\n    initializeBoard() {\n      this.board = Array(this.width * this.height).fill({ type: 'empty' });\n    },\n    startGame() {\n      this.gameInterval = setInterval(this.updateGame, 200);\n      document.addEventListener('keydown', this.handleKeyPress);\n    },\n    stopGame() {\n      clearInterval(this.gameInterval);\n      document.removeEventListener('keydown', this.handleKeyPress);\n    },\n    handleKeyPress(event) {\n      switch(event.key) {\n        case 'ArrowUp':\n          this.move('up');\n          break;\n        case 'ArrowDown':\n          this.move('down');\n          break;\n        case 'ArrowLeft':\n          this.move('left');\n          break;\n        case 'ArrowRight':\n          this.move('right');\n          break;\n      }\n    },\n    async move(direction) {\n      try {\n        await axios.post(`${API_BASE_URL}/move`, { direction });\n        await this.updateGame();\n      } catch (error) {\n        console.error('Error moving:', error);\n      }\n    },\n    async updateGame() {\n      try {\n        const response = await axios.get(`${API_BASE_URL}/state`);\n        const { board, score, gameOver } = response.data;\n        \n        // Flatten the 2D board array\n        this.board = board.flat().map(type => ({ type }));\n        this.score = score;\n        this.gameOver = gameOver;\n        \n        if (gameOver) {\n          this.stopGame();\n        }\n      } catch (error) {\n        console.error('Error updating game:', error);\n      }\n    },\n    async restartGame() {\n      try {\n        await axios.post(`${API_BASE_URL}/restart`);\n        this.score = 0;\n        this.gameOver = false;\n        this.startGame();\n      } catch (error) {\n        console.error('Error restarting game:', error);\n      }\n    }\n  }\n};\n</script>\n\n<style>\n.app {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n  background-color: #f0f0f0;\n}\n\n.game-container {\n  background-color: white;\n  padding: 2rem;\n  border-radius: 10px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n}\n\nh1 {\n  text-align: center;\n  color: #333;\n  margin-bottom: 1rem;\n}\n\n.game-board {\n  display: grid;\n  gap: 2px;\n  background-color: #ddd;\n  padding: 10px;\n  border-radius: 5px;\n}\n\n.cell {\n  aspect-ratio: 1;\n  background-color: white;\n  border-radius: 2px;\n}\n\n.cell.snake {\n  background-color: #4CAF50;\n}\n\n.cell.food {\n  background-color: #f44336;\n}\n\n.game-info {\n  margin-top: 1rem;\n  text-align: center;\n}\n\n.score {\n  font-size: 1.2rem;\n  font-weight: bold;\n  margin-bottom: 0.5rem;\n}\n\n.game-over {\n  color: #f44336;\n  margin-top: 1rem;\n}\n\n.controls {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 1rem;\n  gap: 0.5rem;\n}\n\n.horizontal-controls {\n  display: flex;\n  gap: 0.5rem;\n}\n\nbutton {\n  padding: 0.5rem 1rem;\n  font-size: 1.2rem;\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n\nbutton:hover {\n  background-color: #45a049;\n}\n\nbutton:active {\n  transform: scale(0.95);\n}\n</style> "],"mappings":";;EACO,SAAM;AAAK;;EACT,SAAM;AAAgB;;EASpB,SAAM;AAAW;;EACf,SAAM;AAAO;;EAZ1BA,GAAA;EAa6B,SAAM;;;EAKxB,SAAM;AAAU;;EAEd,SAAM;AAAqB;;uBAnBtCC,mBAAA,CA0BM,OA1BNC,UA0BM,GAzBJC,mBAAA,CAwBM,OAxBNC,UAwBM,G,0BAvBJD,mBAAA,CAAmB,YAAf,YAAU,QACdA,mBAAA,CAMM;IAND,SAAM,YAAY;IAAEE,KAAK,EAJpCC,eAAA;MAAAC,mBAAA,YAAAC,MAAA,CAIuEC,KAAA,CAAAC,KAAK;IAAA;yBACpET,mBAAA,CAIOU,SAAA,QATfC,WAAA,CAMkCH,KAAA,CAAAI,KAAK,EANvC,UAMkBC,IAAI,EAAEC,KAAK;yBADrBd,mBAAA,CAIO;MAFJD,GAAG,EAAEe,KAAK;MACV,SARXC,eAAA,UAQ2BF,IAAI,CAACG,IAAI;;kBAG9Bd,mBAAA,CAMM,OANNe,UAMM,GALJf,mBAAA,CAA2C,OAA3CgB,UAA2C,EAAxB,SAAO,GAAAC,gBAAA,CAAGX,KAAA,CAAAY,KAAK,OACvBZ,KAAA,CAAAa,QAAQ,I,cAAnBrB,mBAAA,CAGM,OAHNsB,UAGM,G,0BAhBdC,gBAAA,CAa+C,cAErC,IAAArB,mBAAA,CAAgD;IAAvCsB,OAAK,EAAAC,MAAA,QAAAA,MAAA;MAAA,OAAEC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,CAAAC,KAAA,CAAAF,QAAA,EAAAG,SAAA,CAAW;IAAA;KAAE,YAAU,E,KAfjDC,mBAAA,W,GAkBM5B,mBAAA,CAOM,OAPN6B,UAOM,GANJ7B,mBAAA,CAAsC;IAA7BsB,OAAK,EAAAC,MAAA,QAAAA,MAAA,gBAAAO,MAAA;MAAA,OAAEN,QAAA,CAAAO,IAAI;IAAA;KAAQ,GAAC,GAC7B/B,mBAAA,CAGM,OAHNgC,UAGM,GAFJhC,mBAAA,CAAwC;IAA/BsB,OAAK,EAAAC,MAAA,QAAAA,MAAA,gBAAAO,MAAA;MAAA,OAAEN,QAAA,CAAAO,IAAI;IAAA;KAAU,GAAC,GAC/B/B,mBAAA,CAAyC;IAAhCsB,OAAK,EAAAC,MAAA,QAAAA,MAAA,gBAAAO,MAAA;MAAA,OAAEN,QAAA,CAAAO,IAAI;IAAA;KAAW,GAAC,E,GAElC/B,mBAAA,CAAwC;IAA/BsB,OAAK,EAAAC,MAAA,QAAAA,MAAA,gBAAAO,MAAA;MAAA,OAAEN,QAAA,CAAAO,IAAI;IAAA;KAAU,GAAC,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}